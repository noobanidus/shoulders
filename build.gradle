buildscript {
    repositories {
        mavenLocal()
        maven { url = 'http://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
        maven {
            url 'https://dogforce-games.com/maven'
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.0.165-run-configs-rework', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'maven-publish'
apply plugin: 'eclipse'

version = "${minecraft_version}-${mod_version}"
if (System.getenv('BUILD_NUMBER') != null) {
    version = "${minecraft_version}-${mod_version}-" + System.getenv('BUILD_NUMBER')
}
group = "noobanidus.mods.shoulders"
archivesBaseName = "shoulders"

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

minecraft {
    mappings channel: 'snapshot', version: "${mcp_mappings}"

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            taskName 'runClient'

            workingDirectory project.file('run')

            //property 'forge.logging.markers', 'CORE,REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                shoulders {
                    source sourceSets.main
                }
            }
        }

        server {
            taskName 'runServer'

            workingDirectory project.file('run')

            //property 'forge.logging.markers', 'CORE,REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                shoulders {
                    source sourceSets.main
                }
            }
        }

        data {
            taskName 'runData'

            workingDirectory project.file('run')

            environment 'target', 'fmluserdevdata'

            //property 'forge.logging.markers', 'CORE,REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                shoulders {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

repositories {
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
}

jar {
    manifest {
        attributes(
            'FMLModType': 'LIBRARY'
        )
    }
}

task deobfJar(type: Jar) {
    from(sourceSets.main.output)
    exclude "data/**"
    exclude "META-INF/mods.toml"
    exclude "META-INF/accesstransformer.cfg"
    exclude ".cache"
    exclude "noobanidus/mods/shoulders/Shoulders**"
    exclude "noobanidus/mods/shoulders/gen/**"
    classifier = "deobf"
    manifest {
        attributes(
            'FMLModType': 'LIBRARY'
        )
    }
}

task embedJar(type: Jar) {
    from(sourceSets.main.output)
    exclude "META-INF/mods.toml"
    exclude "META-INF/accesstransformer.cfg"
    exclude "data/**"
    exclude ".cache"
    exclude "noobanidus/mods/shoulders/Shoulders**"
    exclude "noobanidus/mods/shoulders/gen/**"
    classifier = "embed"
    manifest {
        attributes(
            'FMLModType': 'LIBRARY'
        )
    }
}

embedJar.finalizedBy reobf

build.dependsOn embedJar
build.dependsOn deobfJar

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            from components.java

            artifact embedJar {
                classifier "embed"
            }

            artifact deobfJar {
                classifier "deobf"
            }

            pom.withXml {
                asNode().dependencies.dependency.each {
                    dep -> dep.parent().remove(dep)
                }
            }
        }
    }
    repositories {
        maven {
            url "file:///" + System.getenv("local_maven")
        }
    }
}
